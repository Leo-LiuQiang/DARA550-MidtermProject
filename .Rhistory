(1.6*1.6*8+0.6*0.6*13+0.4*0.4*10+1.4*1.4*6+2.4*2.4*2+3.4*3.4*1)/(8+13+10+6+2+1)
p1 <- 1
for (i in 0:84){
p1 <- p1 - choose(100,i)*(0.8^i)*(0.2^(100-i))
}
p2 <- 0
for (i in 0:99){
p2 <- p2 + ((exp(-20)*(20^i))/factorial(i))
}
p2 <- 0
for (i in 0:99){
p2 <- p2 + ((exp(-20)*(20^i))/factorial(i))
}
p1 <- 0
for (i in 0:99){
p1 <- p1 + choose(2000,i)*(0.01^i)*(0.99^(2000-i))
}
floor(2.56)
0.4*(4000-2694.4)^2+0.6*0.4*(3000-2694.4)^2+0.6*0.6*0.4*(2000-2694.4)^2+0.6*0.6*0.6*0.4*(1000-2694.4)^2+0.1296*(-2694.4)^2
2*pt(-abs(-2.85),df=14)
2*pt(-abs(-2.58),df=14)
pt(-abs(-1.44),df=14)
x=1
((1/3)*(x+1)^3-(x+0.5)*(x+1)^2+(x^2+x+0.25)*(x+1))-((1/3)*x^3-(x+0.5)*x^2+x*(x^2+x+0.25))
exp <- read.table('Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/RNAseq_data_2023/log2_cpm.txt')
View(exp)
sample <- read.delim('Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/ROSMAP.expr.TIGAR.format_WGS_IDs.tsv')
View(sample)
View(exp)
View(sample)
gene_info <- read.delim('Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/RNAseq_data_2023/gene_info.txt')
phenotype <- read.delim('Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/RNAseq_data_2023/phenotype.txt')
sample_info <- read.delim('Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/RNAseq_data_2023/sample_info.txt')
View(phenotype)
View(exp)
View(sample_info)
View(gene_info)
for (i in range(1:10)){
pl <- 0.12 + 0.01*i
p <- 1
for (j in 0:5){
p <- p - choose(j,20)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
}
for (i in range(1:10)){
pl <- 0.12 + 0.01*i
p <- 1
for (j in 0:5){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
}
for (i in range(1,10)){
pl <- 0.12 + 0.01*i
p <- 1
for (j in 0:5){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
}
for (i in 1:10){
pl <- 0.12 + 0.01*i
p <- 1
for (j in 0:5){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
}
for (i in 1:10){
pl <- 0.12 + 0.01*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
}
for (i in 1:10){
pl <- 0.12 - 0.01*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
}
for (i in 1:10){
pl <- 0.12 - 0.01*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p,pl)
}
for (i in 1:10){
pl <- 0.12 - 0.01*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
for (i in 1:100){
pl <- 0.12 - 0.001*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
for (i in 1:100){
pl <- 0.12 - 0.001*i
p <- 1
for (j in 0:5){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
for (i in 1:100){
pl <- 0.12 - 0.001*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
for (i in 1:30){
pl <- 0.01*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
for (i in 1:40){
pl <- 0.01*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
for (i in 1:10){
pl <- 0.31+0.001*i
p <- 1
for (j in 0:4){
p <- p - choose(20,j)*((pl)^j)*((1-pl)^(20-j))
}
print(p)
print(pl)
}
View(exp)
input <- read.delim2("Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/GD462.GeneQuantRPKM.50FN.samplename.resk10.txt")
View(input)
install.packages(peer)
library('peer')
install.packages(peer)
install.packages('peer')
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("peer")
install.packages('peer')
install.packages('peer')
install.packages('peer')
install.packages('peer')
install.packages('Downloads/peer_source_1.3.tar.gz')
install.packages('devtools')
install.packages('AnnotationHub','ensembldb','foreach','openxlsx')
wgs <- read.delim2("Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/WGS/AMP-AD_rosmap_WGS_id_key.csv")
View(wgs)
wgs <- read.delim2("Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/WGS/AMP-AD_rosmap_WGS_id_key.csv",sep=",")
View(wgs)
in_dir <- 'Z:/Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/RNAseq_data_2023/'
wgs_dir <- 'Z:/Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/WGS/'
pheno_dir <- 'Z:/Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/Phenotype/'
out_dir <- 'Z:/Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_expression/'
id_dat <- read.csv(paste0(wgs_dir, 'AMP-AD_rosmap_WGS_id_key.csv'))
id_dat <- read.csv(paste0(wgs_dir, 'AMP-AD_rosmap_WGS_id_key.csv'))
in_dir <- 'Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_BulkBrain/RNAseq_data_2023/'
wgs_dir <- 'Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/WGS/'
pheno_dir <- 'Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/Phenotype/'
out_dir <- 'Documents/Biostatistics/RA/Jingjing Yang Lab/Files/QL/1st step/RNAseq_expression/'
id_dat <- read.csv(paste0(wgs_dir, 'AMP-AD_rosmap_WGS_id_key.csv'))
View(id_dat)
id_dat <- id_dat[which(!duplicated(id_dat) & complete.cases(id_dat)),]
id_dat <- id_dat[order(id_dat$projid),]
rownames(id_dat) <- NULL
id_dat1 <- read.csv(paste0(wgs_dir, 'AMP-AD_rosmap_WGS_id_key.csv'))
id_dat1 <- id_dat1[which(!duplicated(id_dat1) & complete.cases(id_dat1)),]
length(setdiff(id_dat$projid, id_dat1$projid))
pheno <- read.xlsx(paste0(pheno_dir, 'dataset_741_basic_06-07-2022.xlsx'))
install.packages('openxlsx')
library(openxlsx)
pheno <- read.xlsx(paste0(pheno_dir, 'dataset_741_basic_06-07-2022.xlsx'))
View(pheno)
pheno <- pheno[which(complete.cases(pheno[,c('age_death')])), c('projid','study','age_death','msex')]
rownames(pheno) <- NULL
in_dir
pheno <- read.delim(paste0(in_dir, 'phenotype.txt'))
View(pheno)
pt(-2.35,df=4,lower.tail = FALSE)
pt(0.264,df=4,lower.tail = FALSE)
pt(1.0332,df=18,lower.tail = FALSE)
pt(0.66597,df=18,lower.tail = FALSE)
qt(0.95,df=13)
pt(0.98,df=13,lower.tail = FALSE)
2*pt(0.98,df=13,lower.tail = FALSE)
qt(0.975,df=13)
pt(0.798,df=13,lower.tail = FALSE)
qt(0.95,df=28)
pt(5.13,df=28,lower.tail = FALSE)
pt(-0.816,df=28,lower.tail = FALSE)
qt(0.975,df=9)
2*pt(3.67,df=9,lower.tail = FALSE)
pt(-2.84,df=9,lower.tail = FALSE)
qt(0.95,df=27)
qt(0.95,df=28)
pt(5.13,df=27,lower.tail = FALSE)
pt(-1.3,df=21,lower.tail = FALSE)
pt(1.3,df=21,lower.tail = FALSE)
sessionInfo()
install.packages("DiagrammeR")
library(DiagrammeR)
graph <- create_graph()
graph <- graph %>%
add_node(label = "Reproducible Research", type = "main") %>%
add_node(label = "Command Line Interface", type = "sub") %>%
graph <- graph %>%
add_edge(from = "Reproducible Research", to = "Command Line Interface") %>%
node_style <- style_node(label_font = "bold", color = "blue")
graph <- create_graph()
graph <- graph %>%
add_node(label = "Reproducible Research", type = "main") %>%
add_node(label = "Command Line Interface", type = "sub")
graph <- graph %>%
add_edge(from = "Reproducible Research", to = "Command Line Interface")
node_style <- style_node(label_font = "bold", color = "blue")
cat("hello from cat\n")
message("hello from message")
print("hello from print")
warning("hello from warning")
stop("hello from stop")
install.packages("rmarkdown")
install.packages("tinytex")
tinytex::install_tinytex()
Sys.data
Sys.date
Sys.Date()
my_variable <- "some value"
url_for_data <- "https://bit.ly/vrc01_data"
data <- read.csv(url_for_data, header = TRUE)
colnames(data)
install.packages("revealjs")
a <- "a-bco-aksdkas-sadasds"
strsplit(a,",")
strsplit(a,,)
strsplit(a,"-")
a <- c("a-b-c","b-c-d")
strsplit(a,"-")
install.packages("labelled")
install.packages("gtsummary")
install.packages("car")
knit_with_parameters("~/Documents/Biostatistics/24SPRING Classes/DATA 550 Datascience Toolkit/Module 4/hiv_report.Rmd")
knit_with_parameters("~/Documents/Biostatistics/24SPRING Classes/DATA 550 Datascience Toolkit/Module 4/hiv_report.Rmd")
library(knitr)
opts_chunk$set(
echo = TRUE, warning = FALSE, message = FALSE
)
library(readr)
cancer_data <- read_csv("cancer patient data sets.csv")
head(cancer_data)
# Load libraries
library(dplyr)
library(knitr)
# Create summary statistics for numeric variables
numeric_summary <- cancer_data %>%
summarise(across(where(is.numeric),
list(min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = "{.col}_{.fn}")) %>%
pivot_longer(everything(),
names_to = c("variable", "statistic"),
names_sep = "_")
# Load libraries
library(dplyr)
library(knitr)
library(tidyr)
# Create summary statistics for numeric variables
numeric_summary <- cancer_data %>%
summarise(across(where(is.numeric),
list(min = ~min(., na.rm = TRUE),
max = ~max(., na.rm = TRUE),
mean = ~mean(., na.rm = TRUE),
median = ~median(., na.rm = TRUE),
sd = ~sd(., na.rm = TRUE)),
.names = "{.col}_{.fn}")) %>%
pivot_longer(everything(),
names_to = c("variable", "statistic"),
names_sep = "_")
# Present the summary table
kable(numeric_summary)
View(cancer_data)
View(cancer_data)
# Load packages
library(dplyr)
library(broom)
# Fit regression model
model <- lm(chronic.Lung.Disease ~ Age + Gender + Air.Pollution + Smoking + Obesity, data = cancer_data)
View(cancer_data)
# Load packages
library(dplyr)
library(broom)
# Fit regression model
model <- lm(chronic Lung Disease ~ Age + Gender + Air Pollution + Smoking + Obesity, data = cancer_data)
colnames(cancer_data)
# Load packages
library(dplyr)
library(broom)
# Fit regression model
model <- lm(chronic.Lung.Disease ~ Age + Gender + Air.Pollution + Smoking + Obesity, data = cancer_data)
ggplot(cancer_data, aes(x = Age, y = chronic.Lung.Disease)) +
geom_point(alpha = 0.6, color = "red") +
theme_minimal() +
labs(title = "Chronic Lung Disease by Age", x = "Age", y = "Chronic Lung Disease Level")
0.8**14
b <- 0.7**14
c <- 0.6**14
b
c
0.6**14+0.4*(0.6**13)
0.6**14+0.4*(0.6**13)*14
d <- 1 - 0.95**14
d
0.95**14
e <- 1 - 0.9**14
f <- 1 - 0.85**14
e
f
clear <- read.csv("/Users/leofanfever/Documents/Biostatistics/24SPRING Classes/BIOS 520 Clinical Trial/HW2/PKclear.csv")
View(clear)
library(dplyr)
clear_grouped <- clear %>%
group_by(IND) %>%
summarise(
AUClast_mean = mean(AUClast, na.rm = TRUE),
AUClast_sd = sd(AUClast, na.rm = TRUE),
HL_Lambda_z_mean = mean(HL_Lambda_z, na.rm = TRUE),
HL_Lambda_z_sd = sd(HL_Lambda_z, na.rm = TRUE)
)
# T-test for AUClast
t_test_auc <- t.test(AUClast ~ IND, data = clear)
# T-test for HL_Lambda_z
t_test_hl <- t.test(HL_Lambda_z ~ IND, data = clear)
library(knitr)
summary_table <- data.frame(
Statistic = c("AUClast Mean", "AUClast SD", "HL_Lambda_z Mean", "HL_Lambda_z SD", "AUClast p-value", "HL_Lambda_z p-value"),
Inducer = c(clear_grouped$AUClast_mean[1], clear_grouped$AUClast_sd[1], clear_grouped$HL_Lambda_z_mean[1], clear_grouped$HL_Lambda_z_sd[1], t_test_auc$p.value, t_test_hl$p.value),
No_Inducer = c(clear_grouped$AUClast_mean[2], clear_grouped$AUClast_sd[2], clear_grouped$HL_Lambda_z_mean[2], clear_grouped$HL_Lambda_z_sd[2], t_test_auc$p.value, t_test_hl$p.value)
)
kable(summary_table)
library(kabelExtra)
install.packages("kableExtra")
install.packages("kableExtra")
library(config)
?config
install.packages("render")
install.packages("rmarkdown")
install.packages("rmarkdown")
here::i_am(
#! TO DO: add appropriate location
here::here("render_combined_report.R")
)
here::i_am(
#! TO DO: add appropriate location
here::here("/render_combined_report.R")
)
1/0.1786
1/0.001
0.999/(1-0.999)
0.8214/0.1786
2/0.1786
2/0.001
1.522*0.376
0.572*0.942
0.376*0.942
1/2.659
0.942*0.376
0.940*0.456
1/1.645
ld <- read.delim("Downloads/LDmatrix1.txt",sep="\t")
View(ld)
ld <- read.delim("Downloads/LDmatrix1.txt",sep="/t")
ld <- read.table("Downloads/LDmatrix1.txt",sep="\t")
View(ld)
ld <- read.table("Downloads/LDmatrix1.txt",sep=" ")
View(ld)
Sys.getenv("WHICH_OUTPUT")
Sys.getenv("WHICH_OUTPUT")
Sys.getenv("WHICH_OUTPUT")
Sys.getenv()
getwd()
setwd("/Users/leofanfever/Documents/Biostatistics/24SPRING Classes/DATA 550 Datascience Toolkit/Midterm Project/")
Sys.getenv("WHICH_OUTPUT")
getwd()
Sys.getenv("WHICH_OUTPUT")
Sys.getenv()
Sys.getenv("WHICH_OUTPUT")
Sys.getenv("WHICH_OUTPUT")
here::i_am("code/05_render_report.R")
Sys.getenv("WHICH_OUTPUT")
Sys.getenv("WHICH_OUTPUT")
Sys.getenv(WHICH_OUTPUT)
Sys.setenv(WHICH_OUTPUT = "pdf")
Sys.getenv(WHICH_OUTPUT)
config = Sys.getenv("WHICH_OUTPUT")
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
library(rmarkdown)
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
Sys.setenv(WHICH_OUTPUT = "pptx")
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
library(config)
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output <- config$output
output
if (output == "ioslides_presentation") {
output_format <- ioslides_presentation(widescreen = TRUE, smaller = TRUE)
} else if (output == "pdf_document") {
output_format <- pdf_document()
} else {
output_format <- html_document()  # 默认输出格式
}
library(rmarkdown)
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
Sys.setenv(WHICH_OUTPUT = "tufte")
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
install.packages("tufte")
config <- config::get(
config = Sys.getenv("WHICH_OUTPUT")
)
output_format <- config$output
rmarkdown::render(
here::here("reports/Group11_COVID_Final_Report.Rmd"),
output_format = output_format
)
Sys.getenv("WHICH_OUTPUT")
Sys.getenv("WHICH_OUTPUT")
getwd()
